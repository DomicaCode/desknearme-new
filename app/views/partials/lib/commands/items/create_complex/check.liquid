{% assign MINIMAL_PRICE = 10 | amount_to_fractional: object.currency %}
{% assign MAXIMAL_PRICE = 100000 | amount_to_fractional: object.currency %}


{% liquid
  assign c = '{ "errors": {}, "valid": true }' | parse_json

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'uuid'
  function c = 'lib/validations/number', c: c, object: object, field_name: 'price', greater_than_or_equal: MINIMAL_PRICE, less_than_or_equal: MAXIMAL_PRICE
  function c = 'lib/validations/number', c: c, object: object, field_name: 'return_days', greater_than_or_equal: 0
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'currency'
  if object.category == blank
    include 'lib/register_error', contract: c, field_name: 'category', key: 'app.errors.blank'
  else
    function category = 'lib/queries/categories/find', key: object.category
    unless category
      include 'lib/register_error', contract: c, field_name: 'category', key: 'app.errors.disallowed'
    endunless
  endif

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'name'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'description'
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'lang'

  function c = 'lib/validations/presence', c: c, object: object, field_name: 'owner'
  comment
  function c = 'lib/validations/presence', c: c, object: object, field_name: 'sku'
  endcomment
  function c = 'lib/validations/number',   c: c, object: object, field_name: 'quantity', greater_than: 0
  function c = 'lib/validations/number',   c: c, object: object, field_name: 'max_in_one_order', greater_than: 0


  hash_assign object['valid'] = c.valid
  hash_assign object['errors'] = c.errors

  return object
%}
